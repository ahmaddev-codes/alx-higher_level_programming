4-print_square.py
=================
Import module
=============
Test case #1
>>> print_square = __import__('4-print_square').print_square

Function
========
`def print_square(size):`

* size is the size length of the square
* size must be an integer, otherwise raise a TypeError exception with the message size must be an integer
* if size is less than 0, raise a ValueError exception with the message size must be >= 0
* if size is a float and is less than 0, raise a TypeError exception with the message size must be an integer

Section // Integers
=================
Test case #2
>>> print_square(5)
#####
#####
#####
#####
#####

Test case #3
>>> print_square(0)

Test case #4
>>> print_square(1)
#

Section // Neegative Integers
=============================
Test case #5
>>> print_square(-1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ahmad-dev/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 32, in print_square
    raise ValueError("size must be >= 0")
ValueError: size must be >= 0

Section // Floats
=================
Test case #6
>>> print_square(2.5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ahmad-dev/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 28, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

Section // Strings
==================
Test ase #7
>>> print_square("four")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/ahmad-dev/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 28, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer
